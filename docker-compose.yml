# Pokemon API - Laravel Backend - DFYA

services:
  # Laravel Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
      target: development  # Change to 'production' for prod builds
    container_name: pokemon-api
    restart: unless-stopped
    working_dir: /var/www/html
    volumes:
      - .:/var/www/html
      - ./storage:/var/www/html/storage
      - ./bootstrap/cache:/var/www/html/bootstrap/cache
    ports:
      - "8000:80"
    environment:
      - APP_ENV=local
      - APP_DEBUG=true
      - DB_CONNECTION=mysql
      - DB_HOST=db
      - DB_PORT=3306
      - DB_DATABASE=pokemon_api
      - DB_USERNAME=pokemon_user
      - DB_PASSWORD=pokemon_password
      - CACHE_DRIVER=redis
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    depends_on:
      - db
      - redis
    networks:
      - pokemon-network

  # MySQL Database
  db:
    image: mysql:8.0
    container_name: pokemon-mysql
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: pokemon_api
      MYSQL_USER: pokemon_user
      MYSQL_PASSWORD: pokemon_password
      MYSQL_ROOT_PASSWORD: root_password
    volumes:
      - mysql_data:/var/lib/mysql
      - ./docker/mysql/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "3306:3306"
    networks:
      - pokemon-network

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: pokemon-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - pokemon-network

  # phpMyAdmin (optional, for database management)
  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: pokemon-phpmyadmin
    restart: unless-stopped
    environment:
      PMA_HOST: db
      PMA_USER: pokemon_user
      PMA_PASSWORD: pokemon_password
    ports:
      - "8080:80"
    depends_on:
      - db
    networks:
      - pokemon-network

volumes:
  mysql_data:
    driver: local
  redis_data:
    driver: local

networks:
  pokemon-network:
    driver: bridge